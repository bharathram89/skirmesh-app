"""empty message

Revision ID: 734abcb12a65
Revises: 8e6bd9cfe07b
Create Date: 2021-03-28 19:58:57.024701

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '734abcb12a65'
down_revision = '8e6bd9cfe07b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('data')
    op.drop_table('medic')
    op.drop_table('score')
    op.drop_table('node_status')
    op.drop_table('images')
    op.drop_table('player')
    op.drop_table('uid')
    op.drop_table('team')
    op.drop_table('game')
    op.drop_table('field')
    op.alter_column('teams', 'gameConfigID',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('teams', 'gameConfigID',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('images',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('player', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('mimetype', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['player'], ['player.id'], name='images_player_fkey'),
    sa.PrimaryKeyConstraint('id', name='images_pkey')
    )
    op.create_table('uid',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('uid_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('team', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('field', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['field'], ['field.field'], name='uid_field_fkey'),
    sa.ForeignKeyConstraint(['team'], ['team.team'], name='uid_team_fkey'),
    sa.PrimaryKeyConstraint('id', name='uid_pkey'),
    sa.UniqueConstraint('uid', name='uid_uid_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('score',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('field', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('node', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('team', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('game', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time_held', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['field'], ['field.field'], name='score_field_fkey'),
    sa.ForeignKeyConstraint(['game'], ['game.id'], name='score_game_fkey'),
    sa.ForeignKeyConstraint(['node'], ['node_status.node'], name='score_node_fkey'),
    sa.ForeignKeyConstraint(['team'], ['team.team'], name='score_team_fkey'),
    sa.ForeignKeyConstraint(['uid'], ['uid.uid'], name='score_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='score_pkey')
    )
    op.create_table('player',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('firstname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('callsign', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('outfit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('captures', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assists', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['uid'], ['uid.uid'], name='player_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='player_pkey'),
    sa.UniqueConstraint('callsign', name='player_callsign_key'),
    sa.UniqueConstraint('uid', name='player_uid_key')
    )
    op.create_table('medic',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('alive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['uid'], ['uid.uid'], name='medic_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='medic_pkey'),
    sa.UniqueConstraint('uid', name='medic_uid_key')
    )
    op.create_table('game',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('field', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['field'], ['field.field'], name='game_field_fkey'),
    sa.PrimaryKeyConstraint('id', name='game_pkey')
    )
    op.create_table('field',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('field_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('field', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='field_pkey'),
    sa.UniqueConstraint('field', name='field_field_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('sender', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('dest', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('command', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payload', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='data_pkey')
    )
    op.create_table('node_status',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('node', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('field', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('config', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cap_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('med_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bomb_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('arm_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('diff_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cap_asst', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('team', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('stable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('point_scale', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('allow_medic', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('bomb_status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['field'], ['field.field'], name='node_status_field_fkey'),
    sa.ForeignKeyConstraint(['team'], ['team.team'], name='node_status_team_fkey'),
    sa.ForeignKeyConstraint(['uid'], ['uid.uid'], name='node_status_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='node_status_pkey'),
    sa.UniqueConstraint('node', name='node_status_node_key')
    )
    op.create_table('team',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('team', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='team_pkey'),
    sa.UniqueConstraint('team', name='team_team_key')
    )
    # ### end Alembic commands ###
